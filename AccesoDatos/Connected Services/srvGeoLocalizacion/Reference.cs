//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoDatos.srvGeoLocalizacion {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="srvGeoLocalizacion.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IngresarLoginEvent", ReplyAction="http://tempuri.org/IService1/IngresarLoginEventResponse")]
        Modelos.ContenedorLoginDTO IngresarLoginEvent(string correo, string Pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IngresarLoginEvent", ReplyAction="http://tempuri.org/IService1/IngresarLoginEventResponse")]
        System.Threading.Tasks.Task<Modelos.ContenedorLoginDTO> IngresarLoginEventAsync(string correo, string Pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegistroLoginEvent", ReplyAction="http://tempuri.org/IService1/RegistroLoginEventResponse")]
        int RegistroLoginEvent(string nombres, string apellidos, string correo, string pass1, string pass2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegistroLoginEvent", ReplyAction="http://tempuri.org/IService1/RegistroLoginEventResponse")]
        System.Threading.Tasks.Task<int> RegistroLoginEventAsync(string nombres, string apellidos, string correo, string pass1, string pass2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginRecoverPassword", ReplyAction="http://tempuri.org/IService1/LoginRecoverPasswordResponse")]
        Modelos.ResetPassDTO LoginRecoverPassword(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginRecoverPassword", ReplyAction="http://tempuri.org/IService1/LoginRecoverPasswordResponse")]
        System.Threading.Tasks.Task<Modelos.ResetPassDTO> LoginRecoverPasswordAsync(string correo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePasswordEvent", ReplyAction="http://tempuri.org/IService1/ChangePasswordEventResponse")]
        int ChangePasswordEvent(string Pass1, string Pass2, long idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePasswordEvent", ReplyAction="http://tempuri.org/IService1/ChangePasswordEventResponse")]
        System.Threading.Tasks.Task<int> ChangePasswordEventAsync(string Pass1, string Pass2, long idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GenerarReporteEvent", ReplyAction="http://tempuri.org/IService1/GenerarReporteEventResponse")]
        int GenerarReporteEvent(string LatVal, string LngVal, string DirVal, int TipVal, string URLVal, string DescVal, long UserVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GenerarReporteEvent", ReplyAction="http://tempuri.org/IService1/GenerarReporteEventResponse")]
        System.Threading.Tasks.Task<int> GenerarReporteEventAsync(string LatVal, string LngVal, string DirVal, int TipVal, string URLVal, string DescVal, long UserVal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConsultaReportesUsuario", ReplyAction="http://tempuri.org/IService1/ConsultaReportesUsuarioResponse")]
        System.Collections.Generic.List<Modelos.ReporteHuecoDTO> ConsultaReportesUsuario(long id_Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConsultaReportesUsuario", ReplyAction="http://tempuri.org/IService1/ConsultaReportesUsuarioResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Modelos.ReporteHuecoDTO>> ConsultaReportesUsuarioAsync(long id_Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizacionEstadoRegistro", ReplyAction="http://tempuri.org/IService1/ActualizacionEstadoRegistroResponse")]
        int ActualizacionEstadoRegistro(long id_Registro, int tipoA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizacionEstadoRegistro", ReplyAction="http://tempuri.org/IService1/ActualizacionEstadoRegistroResponse")]
        System.Threading.Tasks.Task<int> ActualizacionEstadoRegistroAsync(long id_Registro, int tipoA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConsultaReporteGeneral", ReplyAction="http://tempuri.org/IService1/ConsultaReporteGeneralResponse")]
        System.Collections.Generic.List<Modelos.ReporteGeneralDTO> ConsultaReporteGeneral();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConsultaReporteGeneral", ReplyAction="http://tempuri.org/IService1/ConsultaReporteGeneralResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Modelos.ReporteGeneralDTO>> ConsultaReporteGeneralAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConsultaReporteGeneralDatos", ReplyAction="http://tempuri.org/IService1/ConsultaReporteGeneralDatosResponse")]
        Modelos.ReporteConsulta ConsultaReporteGeneralDatos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConsultaReporteGeneralDatos", ReplyAction="http://tempuri.org/IService1/ConsultaReporteGeneralDatosResponse")]
        System.Threading.Tasks.Task<Modelos.ReporteConsulta> ConsultaReporteGeneralDatosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegistroInteraccion", ReplyAction="http://tempuri.org/IService1/RegistroInteraccionResponse")]
        int RegistroInteraccion(long IdRegistro, long UserVal, int TipoLike);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RegistroInteraccion", ReplyAction="http://tempuri.org/IService1/RegistroInteraccionResponse")]
        System.Threading.Tasks.Task<int> RegistroInteraccionAsync(long IdRegistro, long UserVal, int TipoLike);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConsultaReportesGeneralAdm", ReplyAction="http://tempuri.org/IService1/ConsultaReportesGeneralAdmResponse")]
        System.Collections.Generic.List<Modelos.ReporteHuecoDTO> ConsultaReportesGeneralAdm();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ConsultaReportesGeneralAdm", ReplyAction="http://tempuri.org/IService1/ConsultaReportesGeneralAdmResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Modelos.ReporteHuecoDTO>> ConsultaReportesGeneralAdmAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : AccesoDatos.srvGeoLocalizacion.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<AccesoDatos.srvGeoLocalizacion.IService1>, AccesoDatos.srvGeoLocalizacion.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Modelos.ContenedorLoginDTO IngresarLoginEvent(string correo, string Pass) {
            return base.Channel.IngresarLoginEvent(correo, Pass);
        }
        
        public System.Threading.Tasks.Task<Modelos.ContenedorLoginDTO> IngresarLoginEventAsync(string correo, string Pass) {
            return base.Channel.IngresarLoginEventAsync(correo, Pass);
        }
        
        public int RegistroLoginEvent(string nombres, string apellidos, string correo, string pass1, string pass2) {
            return base.Channel.RegistroLoginEvent(nombres, apellidos, correo, pass1, pass2);
        }
        
        public System.Threading.Tasks.Task<int> RegistroLoginEventAsync(string nombres, string apellidos, string correo, string pass1, string pass2) {
            return base.Channel.RegistroLoginEventAsync(nombres, apellidos, correo, pass1, pass2);
        }
        
        public Modelos.ResetPassDTO LoginRecoverPassword(string correo) {
            return base.Channel.LoginRecoverPassword(correo);
        }
        
        public System.Threading.Tasks.Task<Modelos.ResetPassDTO> LoginRecoverPasswordAsync(string correo) {
            return base.Channel.LoginRecoverPasswordAsync(correo);
        }
        
        public int ChangePasswordEvent(string Pass1, string Pass2, long idUser) {
            return base.Channel.ChangePasswordEvent(Pass1, Pass2, idUser);
        }
        
        public System.Threading.Tasks.Task<int> ChangePasswordEventAsync(string Pass1, string Pass2, long idUser) {
            return base.Channel.ChangePasswordEventAsync(Pass1, Pass2, idUser);
        }
        
        public int GenerarReporteEvent(string LatVal, string LngVal, string DirVal, int TipVal, string URLVal, string DescVal, long UserVal) {
            return base.Channel.GenerarReporteEvent(LatVal, LngVal, DirVal, TipVal, URLVal, DescVal, UserVal);
        }
        
        public System.Threading.Tasks.Task<int> GenerarReporteEventAsync(string LatVal, string LngVal, string DirVal, int TipVal, string URLVal, string DescVal, long UserVal) {
            return base.Channel.GenerarReporteEventAsync(LatVal, LngVal, DirVal, TipVal, URLVal, DescVal, UserVal);
        }
        
        public System.Collections.Generic.List<Modelos.ReporteHuecoDTO> ConsultaReportesUsuario(long id_Usuario) {
            return base.Channel.ConsultaReportesUsuario(id_Usuario);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Modelos.ReporteHuecoDTO>> ConsultaReportesUsuarioAsync(long id_Usuario) {
            return base.Channel.ConsultaReportesUsuarioAsync(id_Usuario);
        }
        
        public int ActualizacionEstadoRegistro(long id_Registro, int tipoA) {
            return base.Channel.ActualizacionEstadoRegistro(id_Registro, tipoA);
        }
        
        public System.Threading.Tasks.Task<int> ActualizacionEstadoRegistroAsync(long id_Registro, int tipoA) {
            return base.Channel.ActualizacionEstadoRegistroAsync(id_Registro, tipoA);
        }
        
        public System.Collections.Generic.List<Modelos.ReporteGeneralDTO> ConsultaReporteGeneral() {
            return base.Channel.ConsultaReporteGeneral();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Modelos.ReporteGeneralDTO>> ConsultaReporteGeneralAsync() {
            return base.Channel.ConsultaReporteGeneralAsync();
        }
        
        public Modelos.ReporteConsulta ConsultaReporteGeneralDatos() {
            return base.Channel.ConsultaReporteGeneralDatos();
        }
        
        public System.Threading.Tasks.Task<Modelos.ReporteConsulta> ConsultaReporteGeneralDatosAsync() {
            return base.Channel.ConsultaReporteGeneralDatosAsync();
        }
        
        public int RegistroInteraccion(long IdRegistro, long UserVal, int TipoLike) {
            return base.Channel.RegistroInteraccion(IdRegistro, UserVal, TipoLike);
        }
        
        public System.Threading.Tasks.Task<int> RegistroInteraccionAsync(long IdRegistro, long UserVal, int TipoLike) {
            return base.Channel.RegistroInteraccionAsync(IdRegistro, UserVal, TipoLike);
        }
        
        public System.Collections.Generic.List<Modelos.ReporteHuecoDTO> ConsultaReportesGeneralAdm() {
            return base.Channel.ConsultaReportesGeneralAdm();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Modelos.ReporteHuecoDTO>> ConsultaReportesGeneralAdmAsync() {
            return base.Channel.ConsultaReportesGeneralAdmAsync();
        }
    }
}
